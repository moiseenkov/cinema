version: '3'

services:
  api: &api
    build: .
    volumes:
      - .:/app/
    ports:
      - "8000:8000"
    networks:
      - backend
    environment:
      POSTGRES_DB_NAME: ${POSTGRES_DB_NAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
    links:
      - db
    depends_on:
      - db
      - rabbitmq
      - celery_workers
      - celery_beat
    restart: unless-stopped

  db:
    image: postgres
    networks:
      - backend
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    restart: unless-stopped

  celery_workers:
    <<: *api
    command: celery -A cinema worker --loglevel=info
    ports: []
    depends_on:
      - rabbitmq
      - db

  celery_beat:
    <<: *api
    command: celery -A cinema beat --loglevel=DEBUG
    ports: []
    depends_on:
      - rabbitmq
      - db

  rabbitmq:
    image: rabbitmq:3.8-management
    hostname: "rabbit"
    ports:
      - 5672:5672/tcp
      - 15672:15672/tcp
    networks:
      - backend

networks:
  backend:
    driver: bridge
